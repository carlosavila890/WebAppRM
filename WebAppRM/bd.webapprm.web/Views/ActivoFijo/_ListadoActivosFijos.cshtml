@model List<ActivoFijo>
@{
    bool isConfiguracionRecepcion = ViewBag.IsConfiguracionRecepcion ?? false;
    bool isConfiguracionSeleccion = ViewBag.IsConfiguracionSeleccion ?? false;
    bool isConfiguracionComponentes = ViewBag.IsConfiguracionComponentes ?? false;
    bool isConfiguracionMantenimiento = ViewBag.IsConfiguracionMantenimiento ?? false;
    bool isConfiguracionSmartForm = ViewBag.IsConfiguracionSmartForm ?? false;
    bool isConfiguracionAlta = ViewBag.IsConfiguracionAlta ?? false;
    bool isConfiguracionBaja = ViewBag.IsConfiguracionBaja ?? false;
}
<div id="content">
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false">
                    @{ 
                        if (isConfiguracionComponentes)
                        {
                            <div class="row">
                                <div class="alert alert-info alert-block" style="border-left-width:5px !important;">
                                    <h4 class="alert-heading">Informaci&oacute;n</h4>
                                    Escoja los Activos Fijos que adicionar&aacute; como Componentes haciendo clic en Detalles y marcando las casillas de selecci&oacute;n.
                                </div>
                            </div>
                        }
                        else
                        {
                            <header>
                                <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                                <h2>@ViewData["Titulo"]</h2>
                            </header>
                        }
                    }
                    <div>
                        <div class="jarviswidget-editbox"></div>
                        <div class="widget-body no-padding">
                            <table id="tableActivosFijos" class="table table-striped table-bordered table-hover" style="width:100%;">
                                <thead>
                                    @{await Html.RenderPartialAsync("~/Views/Shared/_VistaFiltradoText.cshtml", isConfiguracionRecepcion ? 10 : 7);}
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().SubClaseActivoFijo.ClaseActivoFijo.IdTipoActivoFijo)</th>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().SubClaseActivoFijo.IdClaseActivoFijo)</th>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().IdSubClaseActivoFijo)</th>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.FirstOrDefault().UbicacionActivoFijoActual.LibroActivoFijo.IdSucursal)</th>
                                        @{

                                            if (isConfiguracionRecepcion)
                                            {
                                                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.FirstOrDefault().RecepcionActivoFijo.IdProveedor)</th>
                                                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.FirstOrDefault().RecepcionActivoFijo.FechaRecepcion)</th>
                                                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().IdCodigoActivoFijo)</th>
                                            }
                                        }
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Nombre)</th>
                                        @if (ViewData["poliza"] != null)
                                        {
                                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().PolizaSeguroActivoFijo.NumeroPoliza)</th>
                                        }
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.FirstOrDefault().RecepcionActivoFijo.Cantidad)</th>
                                        <th>Opciones</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>@Html.DisplayFor(modelItem => item.SubClaseActivoFijo.ClaseActivoFijo.TipoActivoFijo.Nombre)</td>
                                            <td>@Html.DisplayFor(modelItem => item.SubClaseActivoFijo.ClaseActivoFijo.Nombre)</td>
                                            <td>@Html.DisplayFor(modelItem => item.SubClaseActivoFijo.Nombre)</td>
                                            <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.FirstOrDefault()?.UbicacionActivoFijoActual?.LibroActivoFijo?.Sucursal?.Nombre ?? "-");}</td>
                                            @{
                                                if (isConfiguracionRecepcion)
                                                {
                                                    <td>@{await ViewContext.Writer.WriteAsync($"{item.RecepcionActivoFijoDetalle.FirstOrDefault().RecepcionActivoFijo.Proveedor.Nombre} {item.RecepcionActivoFijoDetalle.FirstOrDefault().RecepcionActivoFijo.Proveedor.Apellidos}"); }</td>
                                                    <td>@Html.DisplayFor(modelItem => item.RecepcionActivoFijoDetalle.FirstOrDefault().RecepcionActivoFijo.FechaRecepcion)</td>
                                                    <td>@Html.DisplayFor(modelItem => item.CodigoActivoFijo.Codigosecuencial)</td>
                                                        }
                                            }
                                            <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                                            @if (ViewData["poliza"] != null)
                                            {
                                                <td>@Html.DisplayFor(modelItem => item.PolizaSeguroActivoFijo.NumeroPoliza)</td>
                                            }
                                            <td>@item.RecepcionActivoFijoDetalle.Count</td>
                                            <td>
                                                @{
                                                    if (isConfiguracionRecepcion)
                                                    {
                                                        if (ViewBag.UrlRevision != null)
                                                        {
                                                            @Html.ActionLink("Revisar", ViewData["UrlRevision"].ToString(), new { id = item.IdActivoFijo })
                                                            <span>| </span>
                                                        }
                                                        if (ViewBag.UrlEditar != null)
                                                        {
                                                            @Html.ActionLink("Editar", ViewData["UrlEditar"].ToString(), new { id = item.IdActivoFijo })
                                                        }
                                                        <span>| </span>
                                                    }
                                                    <a href="javascript:void(0);" class="btnDetallesActivosFijos" id="btnDetallesActivoFijo_@item.IdActivoFijo" onclick="abrirVentanaDetallesActivoFijo('@item.IdActivoFijo')" data-ids="@String.Join(",", item.RecepcionActivoFijoDetalle.Select(c => c.IdRecepcionActivoFijoDetalle))" data-url="@Url.Action("DetallesActivoFijoResult", "ActivoFijo")" data-toggle="modal" data-target="#myModalTableActivosFijos">Detalles</a>

                                                    if (isConfiguracionRecepcion)
                                                    {
                                                        <span>| </span><a href="javascript:void(0);" id="@item.IdActivoFijo" onclick="abrirVentanaConfirmacion('@item.IdActivoFijo')" data-url="@Url.Action("DeleteRecepcion", values: new { id = item.IdActivoFijo, activoFijoRecepcionado = item.RecepcionActivoFijoDetalle.FirstOrDefault().Estado.Nombre == Estados.Recepcionado })" data-titulo="Eliminar" data-descripcion="&#191;Desea eliminar la recepci&oacute;n del Activo Fijo... ?">Eliminar</a>
                                                    }
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
    <div class="modal fade" id="myModalTableActivosFijos" tabindex="-3" role="dialog" aria-labelledby="myModalTableActivosFijosLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" @{await ViewContext.Writer.WriteAsync(isConfiguracionComponentes ? $"style='width:100% !important;'" : "style='width:85% !important;'");}>
            <div class="modal-content" id="modalContentTableActivosFijos" @{await ViewContext.Writer.WriteAsync(isConfiguracionSmartForm ? "style='padding:15px !important;'" : "");}>
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true" @{await ViewContext.Writer.WriteAsync(isConfiguracionSmartForm ? "style='padding:10px !important;'" : "");}>
                        &times;
                    </button>
                    <h4 class="modal-title" id="myModalTableActivosFijosLabel">Detalles de Activo Fijo</h4>
                </div>
                <div class="modal-body" id="modalBodyTableActivosFijos" @{await ViewContext.Writer.WriteAsync(isConfiguracionSmartForm ? "style='padding:15px !important;padding-top:10px !important;'" : "");}></div>
                <div class="modal-footer" id="divFooterTableActivosFijos" @{await ViewContext.Writer.WriteAsync(isConfiguracionSmartForm ? "style='padding:15px !important;'" : "");}>
                    <button type="button" class="btn btn-default" id="btnCancelarTableActivosFijos" data-dismiss="modal" @{await ViewContext.Writer.WriteAsync(isConfiguracionSmartForm ? "style='padding:7px !important;'" : "");}>Cancelar</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var arrConfiguraciones = [
        { propiedad: "IsConfiguracionRecepcion", valor: ("@isConfiguracionRecepcion".toLowerCase() === 'true') },
        { propiedad: "IsConfiguracionSeleccion", valor: ("@isConfiguracionSeleccion".toLowerCase() === 'true') },
        { propiedad: "IsConfiguracionMantenimiento", valor: ("@isConfiguracionMantenimiento".toLowerCase() === 'true') },
        { propiedad: "IsConfiguracionComponentes", valor: ("@isConfiguracionComponentes".toLowerCase() === 'true') },
        { propiedad: "IsConfiguracionSmartForm", valor: ("@isConfiguracionSmartForm".toLowerCase() === 'true') },
        { propiedad: "IsConfiguracionAlta", valor: ("@isConfiguracionAlta".toLowerCase() === 'true') },
        { propiedad: "IsConfiguracionBaja", valor: ("@isConfiguracionBaja".toLowerCase() === 'true') }
    ];
</script>