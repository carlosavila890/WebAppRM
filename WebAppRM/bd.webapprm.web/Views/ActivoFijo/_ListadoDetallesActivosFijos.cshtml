@model List<RecepcionActivoFijoDetalleSeleccionado>
@{ 
    List<PropiedadValor> arrConfiguraciones = ViewBag.Configuraciones ?? new List<PropiedadValor>();

    Func<string, bool> ExisteConfiguracion = x =>
    {
        var propiedadValor = arrConfiguraciones.FirstOrDefault(c => c.Propiedad == x);
        return propiedadValor != null ? bool.Parse(propiedadValor.Valor) : false;
    };

    bool isConfiguracionRecepcion = ExisteConfiguracion("IsConfiguracionRecepcion");
    bool isConfiguracionSeleccion = ExisteConfiguracion("IsConfiguracionSeleccion");
    bool isConfiguracionComponentes = ExisteConfiguracion("IsConfiguracionComponentes");
    bool isConfiguracionListadoComponentes = ExisteConfiguracion("IsConfiguracionListadoComponentes");
    bool isConfiguracionMantenimiento = ExisteConfiguracion("IsConfiguracionMantenimiento");
    bool isConfiguracionSmartForm = ExisteConfiguracion("IsConfiguracionSmartForm");
    bool isConfiguracionAlta = ExisteConfiguracion("IsConfiguracionAlta");
    bool isConfiguracionListadoAltas = ExisteConfiguracion("IsConfiguracionListadoAltas");
    bool isConfiguracionBaja = ExisteConfiguracion("IsConfiguracionBaja");

    int cantidadTotal = 0;
    string nombreTabla = "tableDetallesActivoFijo";
    string callbackFunctionCheckBox = String.Empty;

    if (isConfiguracionRecepcion)
    {
        cantidadTotal = 13;
    }
    else if (isConfiguracionListadoComponentes)
    {
        cantidadTotal = 16;
    }
    else if (isConfiguracionComponentes)
    {
        cantidadTotal = 15;
        nombreTabla += "Componentes";
        callbackFunctionCheckBox = "callBackFunctionSeleccionComponente";
    }

    if (isConfiguracionSeleccion)
    {
        cantidadTotal+=6;
    }
}
<div class="table-responsive">
    @{
        if (isConfiguracionComponentes)
        {
            <div class="row">
                <div class="alert alert-info alert-block" style="border-left-width:5px !important;padding-left:20px !important;">
                    <h4 class="alert-heading">Informaci&oacute;n</h4>
                    Escoja los Activos Fijos que adicionar&aacute; como Componentes marcando las casillas de selecci&oacute;n.
                </div>
            </div>
        }
    }
    <table id="@nombreTabla" class="table table-striped table-bordered table-hover" style="width:100%;">
        <thead>
            @{ await Html.RenderPartialAsync("~/Views/Shared/_VistaFiltradoText.cshtml", cantidadTotal, new ViewDataDictionary(ViewData) { { "MostrarFiltradoUltimaColumna", isConfiguracionComponentes } });}
            <tr>
                @{
                    if (isConfiguracionSeleccion)
                    {
                        <th></th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.ClaseActivoFijo.IdTipoActivoFijo)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.IdClaseActivoFijo)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.IdSubClaseActivoFijo)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.Nombre)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.IdCodigoActivoFijo)</th>
                    }
                }
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.Serie)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.NumeroChasis)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.NumeroMotor)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.Placa)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.NumeroClaveCatastral)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.Bodega.IdSucursal)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdBodega)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdEmpleado)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.IdProveedor)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.IdMotivoRecepcion)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.FechaRecepcion)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.OrdenCompra)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.IdFondoFinanciamiento)</th>
                @{
                    if (isConfiguracionAlta || isConfiguracionListadoComponentes || isConfiguracionComponentes)
                    {
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.AltaActivoFijoActual.FechaAlta)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.AltaActivoFijoActual.FacturaActivoFijo.NumeroFactura)</th>
                    }
                    if (isConfiguracionBaja)
                    {
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.BajaActivoFijo.FechaBaja)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.BajaActivoFijo.IdMotivoBaja)</th>
                    }
                    if (!isConfiguracionRecepcion && !isConfiguracionComponentes)
                    {
                        <th>Opciones</th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var item in Model)
                {
                    <tr id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle">
                        @{
                            if (isConfiguracionSeleccion)
                            {
                                <td>
                                    <div class="checkbox">
                                        <label>
                                            <input class="checkbox style-0 chkDetallesActivoFijo" @{await ViewContext.Writer.WriteAsync(item.Seleccionado ? "checked='checked'" : "");} type="checkbox" data-funcioncallback="@callbackFunctionCheckBox" data-idrecepcionactivofijodetalle="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" id="chkDetalleActivoFijo_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle">
                                            <span>&nbsp;</span>
                                        </label>
                                    </div>
                                </td>
                                <td>@Html.DisplayFor(c=> item.RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.ClaseActivoFijo.TipoActivoFijo.Nombre)</td>
                                <td>@Html.DisplayFor(c=> item.RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.ClaseActivoFijo.Nombre)</td>
                                <td>@Html.DisplayFor(c=> item.RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.Nombre)</td>
                                <td>@Html.DisplayFor(c=> item.RecepcionActivoFijoDetalle.ActivoFijo.Nombre)</td>
                                <td>@Html.DisplayFor(c=> item.RecepcionActivoFijoDetalle.ActivoFijo.CodigoActivoFijo.Codigosecuencial)</td>
                            }
                        }
                        <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("Serie");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.Serie ?? "-");}</td>
                        <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("NumeroChasis");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.NumeroChasis ?? "-");}</td>
                        <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("NumeroMotor");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.NumeroMotor ?? "-");}</td>
                        <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("Placa");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.Placa ?? "-");}</td>
                        <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("NumeroClaveCatastral");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.NumeroClaveCatastral ?? "-");}</td>
                        <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("Sucursal");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Bodega?.Sucursal?.Nombre ?? "-");}</td>
                        <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("Bodega");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Bodega?.Nombre ?? "-");}</td>
                        <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("Empleado");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Empleado != null ? $"{item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Empleado?.Persona?.Nombres} {item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Empleado?.Persona?.Apellidos}" : "-"); }</td>
                        <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("Proveedor");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.RecepcionActivoFijo?.Proveedor?.Nombre ?? "-");}</td>
                        <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("MotivoRecepcion");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.RecepcionActivoFijo?.MotivoRecepcion?.Descripcion ?? "-");}</td>
                        <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("FechaRecepcion");}">@Html.DisplayFor(modelItem => item.RecepcionActivoFijoDetalle.RecepcionActivoFijo.FechaRecepcion)</td>
                        <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("OrdenCompra");}">@Html.DisplayFor(modelItem => item.RecepcionActivoFijoDetalle.RecepcionActivoFijo.OrdenCompra)</td>
                        <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("FondoFinanciamiento");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.RecepcionActivoFijo?.FondoFinanciamiento?.Nombre ?? "-");}</td>
                        @{
                            if (isConfiguracionAlta || isConfiguracionListadoComponentes || isConfiguracionComponentes)
                            {
                                <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("FechaAlta");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.AltaActivoFijoActual?.FechaAlta != null ? Html.DisplayFor(modelItem => item.RecepcionActivoFijoDetalle.AltaActivoFijoActual.FechaAlta).ToString() : "-");}</td>
                                <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("NumeroFactura");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.AltaActivoFijoActual?.FacturaActivoFijo?.NumeroFactura ?? "-");}</td>
                            }
                            if (isConfiguracionBaja)
                            {
                                <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("FechaBaja");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.BajaActivoFijo?.FechaBaja != null ? Html.DisplayFor(modelItem => item.RecepcionActivoFijoDetalle.BajaActivoFijo.FechaBaja).ToString() : "-");}</td>
                                <td id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle@{await ViewContext.Writer.WriteAsync("MotivoBaja");}">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.BajaActivoFijo?.MotivoBaja?.Nombre ?? "-");}</td>
                            }
                            if (!isConfiguracionRecepcion && !isConfiguracionComponentes)
                            {
                                <td>
                                    @{
                                        if (isConfiguracionMantenimiento)
                                        {
                                            @Html.ActionLink("Ver mantenimientos", "ListarMantenimientos", new { id = item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle })
                                        }
                                        if (isConfiguracionListadoComponentes)
                                        {
                                            <div id="divEliminarComponente_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" class="btnEliminarComponentes" style="display:inline;"><a href="javascript: void(0);" id="btnEliminarComponente_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" onclick="abrirVentanaConfirmacion('btnEliminarComponente_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-funcioncallback="callBackEliminarComponente('@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-titulo="Eliminar" data-descripcion="&#191; Desea eliminar el Componente... ?">Eliminar</a></div>
                                        }
                                    }
                                </td>
                            }
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
</div>