@model List<RecepcionActivoFijoDetalleSeleccionado>
@{ 
    List<PropiedadValor> arrConfiguraciones = ViewBag.Configuraciones;

    Func<string, bool> ExisteConfiguracion = x =>
    {
        var propiedadValor = arrConfiguraciones.FirstOrDefault(c => c.Propiedad == x);
        return propiedadValor != null ? bool.Parse(propiedadValor.Valor) : false;
    };

    bool isConfiguracionRecepcion = ExisteConfiguracion("IsConfiguracionRecepcion");
    bool isConfiguracionSeleccion = ExisteConfiguracion("IsConfiguracionSeleccion");
    bool isConfiguracionMantenimiento = ExisteConfiguracion("IsConfiguracionMantenimiento");
    int cantidadTotal = isConfiguracionRecepcion ? 17 : 18;

    if (isConfiguracionSeleccion)
    {
        cantidadTotal++;
    }
}
<div class="table-responsive">
    <table id="tableDetallesActivoFijo" class="table table-striped table-bordered table-hover" style="width:100%;">
        <thead>
            @{ await Html.RenderPartialAsync("~/Views/Shared/_VistaFiltradoText.cshtml", cantidadTotal);}
            <tr>
                @{ 
                    if (isConfiguracionSeleccion)
                    {
                        <th>
                            <div class="checkbox">
                                <label>
                                    <input class="checkbox style-0  chkSeleccionarTodoDetallesActivoFijo" type="checkbox">
                                    <span>&nbsp;</span>
                                </label>
                            </div>
                        </th>
                    }
                }
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.Serie)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.NumeroChasis)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.NumeroMotor)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.Placa)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.NumeroClaveCatastral)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.Bodega.IdSucursal)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdBodega)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdEmpleado)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.IdProveedor)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.IdMotivoRecepcion)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.FechaRecepcion)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.OrdenCompra)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.IdFondoFinanciamiento)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.AltaActivoFijo.FechaAlta)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.AltaActivoFijo.Factura.Numero)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.BajaActivoFijo.FechaBaja)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.BajaActivoFijo.IdMotivoBaja)</th>
                @{ 
                    if (!isConfiguracionRecepcion)
                    {
                        <th>Opciones</th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var item in Model)
                {
                    <tr>
                        @{ 
                            if (isConfiguracionSeleccion)
                            {
                                <td>
                                    <div class="checkbox">
								        <label>
									        <input class="checkbox style-0 chkDetallesActivoFijo" type="checkbox" id="chkDetalleActivoFijo_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle">
									        <span>&nbsp;</span>
								        </label>
							        </div>
                                </td>
                            }
                        }
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.Serie ?? "-");}</td>
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.NumeroChasis ?? "-");}</td>
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.NumeroMotor ?? "-");}</td>
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.Placa ?? "-");}</td>
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.NumeroClaveCatastral ?? "-");}</td>
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Bodega?.Sucursal?.Nombre ?? "-");}</td>
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Bodega?.Nombre ?? "-");}</td>
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Empleado != null ? $"{item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Empleado?.Persona?.Nombres} {item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Empleado?.Persona?.Apellidos}" : "-"); }</td>
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.RecepcionActivoFijo?.Proveedor?.Nombre ?? "-");}</td>
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.RecepcionActivoFijo?.MotivoRecepcion?.Descripcion ?? "-");}</td>
                        <td>@Html.DisplayFor(modelItem => item.RecepcionActivoFijoDetalle.RecepcionActivoFijo.FechaRecepcion)</td>
                        <td>@Html.DisplayFor(modelItem => item.RecepcionActivoFijoDetalle.RecepcionActivoFijo.OrdenCompra)</td>
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.RecepcionActivoFijo?.FondoFinanciamiento?.Nombre ?? "-");}</td>
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.AltaActivoFijo?.FechaAlta != null ? Html.DisplayFor(modelItem=> item.RecepcionActivoFijoDetalle.AltaActivoFijo.FechaAlta).ToString() : "-");}</td>
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.AltaActivoFijo?.Factura?.Numero ?? "-");}</td>
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.BajaActivoFijo?.FechaBaja != null ? Html.DisplayFor(modelItem=> item.RecepcionActivoFijoDetalle.BajaActivoFijo.FechaBaja).ToString() : "-");}</td>
                        <td>@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.BajaActivoFijo?.MotivoBaja?.Nombre ?? "-");}</td>
                        @{ 
                            if (!isConfiguracionRecepcion)
                            {
                                <td>
                                    @{ 
                                        if (isConfiguracionMantenimiento)
                                        {
                                            @Html.ActionLink("Ver mantenimientos", "ListarMantenimientos", new { id = item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle })
                                        }
                                    }
                                </td>
                            }
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
</div>