@model List<RecepcionActivoFijoDetalleSeleccionado>
@{ 
    List<PropiedadValor> arrConfiguraciones = ViewBag.Configuraciones ?? new List<PropiedadValor>();

    Func<string, bool> ExisteConfiguracion = x =>
    {
        var propiedadValor = arrConfiguraciones.FirstOrDefault(c => c.Propiedad == x);
        return propiedadValor != null ? bool.Parse(propiedadValor.Valor) : false;
    };

    bool isConfiguracionSeleccion = ExisteConfiguracion("IsConfiguracionSeleccion");
    bool isConfiguracionSeleccionDisabled = ExisteConfiguracion("IsConfiguracionSeleccionDisabled");
    bool isConfiguracionDatosActivo = ExisteConfiguracion("IsConfiguracionDatosActivo");
    bool isConfiguracionSmartForm = ExisteConfiguracion("IsConfiguracionSmartForm");

    bool isConfiguracionDetallesRecepcion = ExisteConfiguracion("IsConfiguracionDetallesRecepcion");

    bool isConfiguracionSeleccionComponentes = ExisteConfiguracion("IsConfiguracionSeleccionComponentes");
    bool isConfiguracionListadoComponentes = ExisteConfiguracion("IsConfiguracionListadoComponentes");

    bool isConfiguracionListadoMantenimientos = ExisteConfiguracion("IsConfiguracionListadoMantenimientos");
    bool isConfiguracionListadoProcesosJudiciales = ExisteConfiguracion("IsConfiguracionListadoProcesosJudiciales");

    bool isConfiguracionSeleccionAltas = ExisteConfiguracion("IsConfiguracionSeleccionAltas");
    bool isConfiguracionListadoAltasGestionar = ExisteConfiguracion("IsConfiguracionListadoAltasGestionar");
    bool isConfiguracionAltasGestionarEditar = ExisteConfiguracion("IsConfiguracionAltasGestionarEditar");
    bool isConfiguracionListadoAltas = ExisteConfiguracion("IsConfiguracionListadoAltas");

    bool isConfiguracionSeleccionBajas = ExisteConfiguracion("IsConfiguracionSeleccionBajas");
    bool isConfiguracionListadoBajasGestionar = ExisteConfiguracion("IsConfiguracionListadoBajasGestionar");
    bool isConfiguracionBajasGestionarEditar = ExisteConfiguracion("IsConfiguracionBajasGestionarEditar");
    bool isConfiguracionListadoBajas = ExisteConfiguracion("IsConfiguracionListadoBajas");

    bool isConfiguracionGestionarInventarioAutomatico = ExisteConfiguracion("IsConfiguracionGestionarInventarioAutomatico");

    bool isConfiguracionSeleccionMovilizaciones = ExisteConfiguracion("IsConfiguracionSeleccionMovilizaciones");
    bool isConfiguracionListadoMovilizacionesGestionar = ExisteConfiguracion("IsConfiguracionListadoMovilizacionesGestionar");

    int cantidadTotal = 0;
    string nombreTabla = "tableDetallesActivoFijo";
    string callbackFunctionCheckBox = String.Empty;

    if (isConfiguracionDetallesRecepcion)
    {
        cantidadTotal = 16;
    }
    else if (isConfiguracionListadoComponentes)
    {
        cantidadTotal = 20;
    }
    else if (isConfiguracionSeleccionComponentes)
    {
        cantidadTotal = 19;
        nombreTabla += "Componentes";
        callbackFunctionCheckBox = "callBackFunctionSeleccionComponente";
    }
    else if (isConfiguracionListadoAltasGestionar)
    {
        cantidadTotal = 17;
        nombreTabla += "Seleccionados";
    }
    else if (isConfiguracionSeleccionAltas)
    {
        cantidadTotal = 16;
        nombreTabla += "Altas";
        callbackFunctionCheckBox = "callBackFunctionSeleccionAlta";
    }
    else if (isConfiguracionListadoAltas)
    {
        cantidadTotal = 19;
    }
    else if (isConfiguracionListadoBajasGestionar || isConfiguracionBajasGestionarEditar)
    {
        if (isConfiguracionListadoBajasGestionar && !isConfiguracionBajasGestionarEditar)
        {
            cantidadTotal = 20;
        }
        else
        {
            cantidadTotal = 19;
        }
        nombreTabla += "Seleccionados";
    }
    else if (isConfiguracionSeleccionBajas)
    {
        if (isConfiguracionGestionarInventarioAutomatico)
        {
            cantidadTotal = 20;
        }
        else
        {
            cantidadTotal = 19;
        }
        nombreTabla += "Bajas";
        callbackFunctionCheckBox = "callBackFunctionSeleccionBaja";
    }
    else if (isConfiguracionListadoBajas)
    {
        cantidadTotal = 21;
    }
    else if (isConfiguracionSeleccionMovilizaciones)
    {
        cantidadTotal = 22;
        nombreTabla += "Seleccionados";
    }
    else if (isConfiguracionListadoMovilizacionesGestionar)
    {
        cantidadTotal = 20;
        nombreTabla += "Altas";
        callbackFunctionCheckBox = "callBackFunctionSeleccionAlta";
    }

    if (isConfiguracionSeleccion)
    {
        cantidadTotal++;
    }

    if (isConfiguracionDatosActivo)
    {
        cantidadTotal += 4;
    }
}
<div class="table-responsive">
    @{
        if (isConfiguracionSeleccionComponentes)
        {
            <div class="row">
                <div class="alert alert-info alert-block" style="border-left-width:5px !important;padding-left:20px !important;">
                    <h4 class="alert-heading">Informaci&oacute;n</h4>
                    Escoja los Activos Fijos que adicionar&aacute; como Componentes marcando las casillas de selecci&oacute;n.
                </div>
            </div>
        }
    }
    <table id="@nombreTabla" class="table table-striped table-bordered table-hover" style="width:100%;">
        <thead>
            @{ await Html.RenderPartialAsync("~/Views/Shared/_VistaFiltradoText.cshtml", cantidadTotal, new ViewDataDictionary(ViewData) { { "MostrarFiltradoUltimaColumna", isConfiguracionSeleccionComponentes || isConfiguracionDetallesRecepcion || isConfiguracionSeleccionAltas || isConfiguracionListadoAltas || isConfiguracionListadoBajas || (isConfiguracionSeleccionBajas && !isConfiguracionGestionarInventarioAutomatico) || (isConfiguracionListadoBajasGestionar && isConfiguracionBajasGestionarEditar) || isConfiguracionListadoMovilizacionesGestionar } });}
            <tr>
                @{
                    if (isConfiguracionSeleccion)
                    {
                        <th></th>
                    }
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.IdCodigoActivoFijo)</th>
                    if (isConfiguracionDatosActivo)
                    {
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.ClaseActivoFijo.IdTipoActivoFijo)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.IdClaseActivoFijo)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.IdSubClaseActivoFijo)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.Nombre)</th>
                    }
                }
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.Modelo.IdMarca)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.IdModelo)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.Serie)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.NumeroChasis)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.NumeroMotor)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.Placa)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.NumeroClaveCatastral)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.Bodega.IdSucursal)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdBodega)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdEmpleado)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.IdProveedor)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.IdMotivoRecepcion)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.FechaRecepcion)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.OrdenCompra)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.IdFondoFinanciamiento)</th>
                @{
                    if (isConfiguracionListadoComponentes || isConfiguracionSeleccionComponentes || isConfiguracionListadoAltas || isConfiguracionListadoMantenimientos || isConfiguracionListadoProcesosJudiciales || isConfiguracionListadoBajas || isConfiguracionListadoBajasGestionar || isConfiguracionSeleccionBajas || isConfiguracionSeleccionMovilizaciones || isConfiguracionListadoMovilizacionesGestionar)
                    {
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.AltaActivoFijoActual.FechaAlta)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.AltaActivoFijoActual.IdMotivoAlta)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.AltaActivoFijoActual.FacturaActivoFijo.NumeroFactura)</th>
                    }
                    if (isConfiguracionListadoBajas)
                    {
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.BajaActivoFijoActual.FechaBaja)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.BajaActivoFijoActual.IdMotivoBaja)</th>
                    }
                    if (isConfiguracionSeleccionMovilizaciones || isConfiguracionListadoMovilizacionesGestionar)
                    {
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Componentes)</th>
                        if (isConfiguracionSeleccionMovilizaciones)
	                    {
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Observaciones)</th>
	                    }
                    }
                    if (isConfiguracionListadoComponentes || isConfiguracionListadoMantenimientos || isConfiguracionListadoProcesosJudiciales || isConfiguracionListadoAltasGestionar || (isConfiguracionListadoBajasGestionar && !isConfiguracionBajasGestionarEditar) || isConfiguracionGestionarInventarioAutomatico || isConfiguracionSeleccionMovilizaciones)
                    {
                        <th>Opciones</th>
                    }
                    if (isConfiguracionSeleccionAltas)
                    {
                        <th style="display: none !important;"></th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var item in Model)
                {
                    <tr id="@nombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle">
                        @{
                            if (isConfiguracionSeleccion)
                            {
                                <td>
                                    <div class="checkbox">
                                        <label>
                                            <input class="checkbox style-0 chkDetallesActivoFijo" @{await ViewContext.Writer.WriteAsync(item.Seleccionado ? "checked='checked'" : "");} type="checkbox" onchange="eventoCheckboxDetallesActivoFijo(this)" data-funcioncallback="@callbackFunctionCheckBox" data-idrecepcionactivofijodetalle="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" id="chkDetalleActivoFijo_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" @{await ViewContext.Writer.WriteAsync(isConfiguracionSeleccionDisabled ? "disabled='disabled'" : "");}>
                                            <span>&nbsp;</span>
                                        </label>
                                    </div>
                                </td>
                            }
                            <td id="@String.Format("{0}{1}Codigosecuencial", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.CodigoActivoFijo?.Codigosecuencial ?? "-");}</td>
                            if (isConfiguracionDatosActivo)
                            {
                                <td id="@String.Format("{0}{1}TipoActivoFijo", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@Html.DisplayFor(c=> item.RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.ClaseActivoFijo.TipoActivoFijo.Nombre)</td>
                                <td id="@String.Format("{0}{1}ClaseActivoFijo", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@Html.DisplayFor(c=> item.RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.ClaseActivoFijo.Nombre)</td>
                                <td id="@String.Format("{0}{1}SubclaseActivoFijo", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@Html.DisplayFor(c=> item.RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.Nombre)</td>
                                <td id="@String.Format("{0}{1}NombreActivoFijo", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@Html.DisplayFor(c=> item.RecepcionActivoFijoDetalle.ActivoFijo.Nombre)</td>
                            }
                        }
                        <td id="@String.Format("{0}{1}Marca", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.ActivoFijo?.Modelo?.Marca?.Nombre ?? "-");}</td>
                        <td id="@String.Format("{0}{1}Modelo", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.ActivoFijo?.Modelo?.Nombre ?? "-");}</td>
                        <td id="@String.Format("{0}{1}Serie", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.Serie ?? "-");}</td>
                        <td id="@String.Format("{0}{1}NumeroChasis", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.NumeroChasis ?? "-");}</td>
                        <td id="@String.Format("{0}{1}NumeroMotor", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.NumeroMotor ?? "-");}</td>
                        <td id="@String.Format("{0}{1}Placa", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.Placa ?? "-");}</td>
                        <td id="@String.Format("{0}{1}NumeroClaveCatastral", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.NumeroClaveCatastral ?? "-");}</td>
                        <td id="@String.Format("{0}{1}Sucursal", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)" data-idsucursal="@item.RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.LibroActivoFijo.IdSucursal" data-idlibroactivofijo="@item.RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdLibroActivoFijo">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.LibroActivoFijo?.Sucursal?.Nombre ?? "-");}</td>
                        <td id="@String.Format("{0}{1}Bodega", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Bodega?.Nombre ?? "-");}</td>
                        <td id="@String.Format("{0}{1}Empleado", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)" data-idempleado="@item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.IdEmpleado">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Empleado != null ? $"{item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Empleado?.Persona?.Nombres} {item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Empleado?.Persona?.Apellidos}" : "-"); }</td>
                        <td id="@String.Format("{0}{1}Proveedor", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.RecepcionActivoFijo?.Proveedor != null ? $"{item.RecepcionActivoFijoDetalle.RecepcionActivoFijo.Proveedor.Nombre} {item.RecepcionActivoFijoDetalle.RecepcionActivoFijo.Proveedor.Apellidos}" : "-");}</td>
                        <td id="@String.Format("{0}{1}MotivoRecepcion", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.RecepcionActivoFijo?.MotivoRecepcion?.Descripcion ?? "-");}</td>
                        <td id="@String.Format("{0}{1}FechaRecepcion", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@Html.DisplayFor(modelItem => item.RecepcionActivoFijoDetalle.RecepcionActivoFijo.FechaRecepcion)</td>
                        <td id="@String.Format("{0}{1}OrdenCompra", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@Html.DisplayFor(modelItem => item.RecepcionActivoFijoDetalle.RecepcionActivoFijo.OrdenCompra)</td>
                        <td id="@String.Format("{0}{1}FondoFinanciamiento", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.RecepcionActivoFijo?.FondoFinanciamiento?.Nombre ?? "-");}</td>
                        @{
                            if (isConfiguracionListadoComponentes || isConfiguracionSeleccionComponentes || isConfiguracionListadoAltas || isConfiguracionListadoMantenimientos || isConfiguracionListadoProcesosJudiciales || isConfiguracionListadoBajas || isConfiguracionListadoBajasGestionar || isConfiguracionSeleccionBajas || isConfiguracionSeleccionMovilizaciones || isConfiguracionListadoMovilizacionesGestionar)
                            {
                                <td id="@String.Format("{0}{1}FechaAlta", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.AltaActivoFijoActual?.FechaAlta != null ? item.RecepcionActivoFijoDetalle.AltaActivoFijoActual.FechaAlta.ToString("dd/MM/yyyy hh:mm tt") : "-");}</td>
                                <td id="@String.Format("{0}{1}MotivoAlta", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.AltaActivoFijoActual?.MotivoAlta?.Descripcion ?? "-");}</td>
                                <td id="@String.Format("{0}{1}NumeroFactura", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.AltaActivoFijoActual?.FacturaActivoFijo?.NumeroFactura ?? "-");}</td>
                            }
                            if (isConfiguracionListadoBajas)
                            {
                                <td id="@String.Format("{0}{1}FechaBaja", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.BajaActivoFijoActual?.FechaBaja != null ? item.RecepcionActivoFijoDetalle.BajaActivoFijoActual.FechaBaja.ToString("dd/MM/yyyy hh:mm tt") : "-");}</td>
                                <td id="@String.Format("{0}{1}MotivoBaja", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.BajaActivoFijoActual?.MotivoBaja?.Nombre ?? "-");}</td>
                            }
                            if (isConfiguracionSeleccionMovilizaciones || isConfiguracionListadoMovilizacionesGestionar)
                            {
                                <td id="@String.Format("{0}{1}Componentes", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(!String.IsNullOrEmpty(item?.Componentes) ? item.Componentes : "-");}</td>
                                if (isConfiguracionSeleccionMovilizaciones)
	                            {
                                    <td id="@String.Format("{0}{1}Observaciones", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">
                                        @{await ViewContext.Writer.WriteAsync(!String.IsNullOrEmpty(item?.Observaciones) ? item.Observaciones : "-");}
                                    </td>
	                            }
                            }
                            if (isConfiguracionSeleccionAltas)
                            {
                                <td id="@String.Format("{0}{1}Comunes", nombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)" style="display:none !important;">
                                    <input type="hidden" id="hComunesComponentes_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hComunesComponentes_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@String.Join(",", item.RecepcionActivoFijoDetalle.ComponentesActivoFijoOrigen.Select(c => c.IdRecepcionActivoFijoDetalleComponente))" />
                                </td>
                            }
                            if (isConfiguracionListadoComponentes || isConfiguracionListadoMantenimientos || isConfiguracionListadoProcesosJudiciales || isConfiguracionListadoAltasGestionar || (isConfiguracionListadoBajasGestionar && !isConfiguracionBajasGestionarEditar) || isConfiguracionGestionarInventarioAutomatico || isConfiguracionSeleccionMovilizaciones)
                            {
                                <td>
                                    @{
                                        if (isConfiguracionListadoMantenimientos)
                                        {
                                            <a asp-action="ListadoMantenimientos" asp-route-id="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle">Mantenimientos</a>
                                        }
                                        if (isConfiguracionListadoProcesosJudiciales)
                                        {
                                            <a asp-action="ListadoProcesosJudiciales" asp-route-id="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle">Procesos Judiciales</a>
                                        }
                                        if (isConfiguracionListadoComponentes)
                                        {
                                            <div id="divEliminarComponente_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" class="btnEliminarComponentes" style="display:inline;"><a href="javascript: void(0);" id="btnEliminarComponente_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" onclick="abrirVentanaConfirmacion('btnEliminarComponente_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-funcioncallback="callBackEliminarComponente('@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-titulo="Eliminar" data-descripcion="&#191; Desea eliminar el Componente... ?">Eliminar</a></div>
                                        }
                                        if (isConfiguracionListadoAltasGestionar)
                                        {
                                            <input type="hidden" id="hComponentes_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hComponentes_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@String.Join(",", item.RecepcionActivoFijoDetalle.ComponentesActivoFijoOrigen.Select(c => c.IdRecepcionActivoFijoDetalleComponente))" />
                                            <input type="hidden" class="hiddenIdRecepcionActivoFijoDetalle" id="hIdRecepcionActivoFijoDetalle_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hIdRecepcionActivoFijoDetalle_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" />
                                            <input type="hidden" class="hiddenHEmpleado" id="hEmpleado_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hEmpleado_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@item.RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdEmpleado" />
                                            <input type="hidden" id="hSucursal_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hSucursal_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@item.RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.LibroActivoFijo.IdSucursal" />
                                            <input type="hidden" id="hLibroActivoFijo_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hLibroActivoFijo_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@item.RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdLibroActivoFijo" />
                                            <a href="javascript:void(0);" onclick="cargarFormularioDatosEmpleado(@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)" class="btnDatosEmpleado" data-idfila="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" data-toggle="modal" data-target="#myModalEmpleado">Custodio</a>
                                            if (!isConfiguracionAltasGestionarEditar)
                                            {
                                                <span>| </span><a href="javascript:void(0);" onclick="cargarFormularioComponentesDatosEspecificos(@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)" class="btnComponentesDatosEspecificos" data-idfila="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" data-idorigen="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" data-toggle="modal" data-target="#myModalComponente">Componentes</a>
                                                <div id="divEliminarDatosEspecificos_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" class="btnEliminarDatosEspecificos" style="display:inline;">
                                                    <span>| </span><a href="javascript:void(0);" id="btnEliminarDatosEspecifico_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" onclick="abrirVentanaConfirmacion('btnEliminarDatosEspecifico_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-funcioncallback="callBackFunctionEliminarDatoEspecifico('@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-titulo="Eliminar" data-descripcion="&#191;Desea eliminar el Activo Fijo seleccionado... ?">Eliminar</a>
                                                </div>
                                            }
                                        }
                                        if (isConfiguracionListadoBajasGestionar)
                                        {
                                            <input type="hidden" class="hiddenIdRecepcionActivoFijoDetalle" id="hIdRecepcionActivoFijoDetalle_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hIdRecepcionActivoFijoDetalle_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" />
                                            <input type="hidden" class="hiddenHEmpleado" id="hEmpleado_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hEmpleado_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@item.RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdEmpleado" />
                                            if (!isConfiguracionBajasGestionarEditar)
                                            {
                                                <div id="divEliminarDatosEspecificos_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" class="btnEliminarDatosEspecificos" style="display:inline;">
                                                    <a href="javascript:void(0);" id="btnEliminarDatosEspecifico_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" onclick="abrirVentanaConfirmacion('btnEliminarDatosEspecifico_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-funcioncallback="callBackFunctionEliminarDatoEspecifico('@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-titulo="Eliminar" data-descripcion="&#191;Desea eliminar el Activo Fijo seleccionado... ?">Eliminar</a>
                                                </div>
                                            }
                                        }
                                        if (isConfiguracionGestionarInventarioAutomatico || isConfiguracionSeleccionMovilizaciones)
                                        {
                                            <input type="hidden" class="hiddenIdRecepcionActivoFijoDetalle" id="hIdRecepcionActivoFijoDetalle_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hIdRecepcionActivoFijoDetalle_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" />
                                            <div id="divEliminarDatosEspecificos_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" class="btnEliminarDatosEspecificos" style="display:inline;">
                                                <a href="javascript:void(0);" id="btnEliminarDatosEspecifico_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" onclick="abrirVentanaConfirmacion('btnEliminarDatosEspecifico_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-funcioncallback="callBackFunctionEliminarDatoEspecifico('@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-titulo="Eliminar" data-descripcion="&#191;Desea eliminar el Activo Fijo seleccionado... ?">Eliminar</a>
                                            </div>
                                        }
                                    }
                                </td>
                            }
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
</div>